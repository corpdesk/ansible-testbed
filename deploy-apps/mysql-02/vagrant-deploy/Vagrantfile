# -*- mode: ruby -*-
# vi: set ft=ruby :

# TODO:
# Currently the machine ips are listed manually. This should be
# replaced by a loop that reads from external file and shared by
# all the deployment application files that requires ip information.
# This would probably be a json file.  The same file should be the sources for
# ansible inventory, all other Vagrantfiles, /etc/hosts files etc.
#
# Since Vagrantfile is a rubi file, rubi can be used to optimise it for automation
# At its best, it should not be hand scripted by machine scripted based on a common
# json file that describes the 'cd-cloud' architechural design

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # General Vagrant VM configuration.
  config.vm.box = "bento/ubuntu-22.04"
  config.ssh.insert_key = false
  config.vm.synced_folder ".", "/vagrant", disabled: true

  zone="186"
  initial_ip_no = 176
  vm_count = 3

  # setup devops user
  config.vm.provision "file", source: "remove_devops.sh", destination: "remove_devops.sh"
  config.vm.provision "file", source: "reset_environment.sh", destination: "reset_environment.sh"
  config.vm.provision "file", source: "setup_initial_user.sh", destination: "setup_initial_user.sh"
  config.vm.provision "file", source: "init_cluster.js", destination: "init_cluster.js"
  config.vm.provision "file", source: "build_cluster.js", destination: "build_cluster.js"
  config.vm.provision :shell, :inline => "sudo sh setup_initial_user.sh"

  # config.vm.provision "shell", inline: "sudo apt-get update; sudo ln -sf /usr/bin/python3 /usr/bin/python"
  # config.vm.provision "ansible" do |ans|    
  #   ans.playbook = "setup_initial_user.yaml"
  #   ans.inventory_path = "hosts.ini"
  # end

  # network setup
  config.vm.network "public_network", bridge: "wlp2s0: Wi-Fi (AirPort)", auto_config: true

  config.vm.provider :virtualbox do |v|
    v.memory = 2048
    v.linked_clone = true
  end
  
  (176..178).each do |i|
    config.vm.define "cd-db-#{zone}-#{i}" do |app|
      app.vm.hostname = "cd-db-#{zone}-#{i}"
      app.vm.network :public_network, ip: "192.168.1.#{i}"
    end
  end

  # # vagrant server 11.
  # config.vm.define "cd-db-186-171" do |app|
  #   app.vm.hostname = "cd-db-186-171"
  #   app.vm.network :public_network, ip: "192.168.1.171"
  # end

  # # vagrant server 11.
  # config.vm.define "cd-db-186-172" do |app|
  #   app.vm.hostname = "cd-db-186-172"
  #   app.vm.network :public_network, ip: "192.168.1.172"
  # end

  # # vagrant server 11.
  # config.vm.define "cd-db-186-173" do |app|
  #   app.vm.hostname = "cd-db-186-173"
  #   app.vm.network :public_network, ip: "192.168.1.173"
  # end

  # # vagrant server 12
  # config.vm.define "cd-db-186-174" do |app|
  #   app.vm.hostname = "cd-db-186-174"
  #   app.vm.network :public_network, ip: "192.168.1.174"
  # end

  # # vagrant server 13
  # config.vm.define "cd-db-186-175" do |app|
  #   app.vm.hostname = "cd-db-186-175"
  #   app.vm.network :public_network, ip: "192.168.1.175"
  # end

  # # vagrant server 13
  # config.vm.define "cd-db-186-244" do |app|
  #   app.vm.hostname = "cd-db-186-244"
  #   app.vm.network :public_network, ip: "192.168.1.244"
  # end

  # # vagrant server 13
  # config.vm.define "cd-db-186-245" do |app|
  #   app.vm.hostname = "cd-db-186-245"
  #   app.vm.network :public_network, ip: "192.168.1.245"
  # end

end
