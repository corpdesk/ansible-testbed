---
# ansible-galaxy install -p ./roles robertdebock.virtualbox
# ansible-galaxy install -p ./roles darkwizard242.vagrant
# ansible-galaxy install -p ./roles install hispanico.nginx_revproxy
# ansible-playbook -i hosts.ini install-vagrant.yaml -kK -vvv
# ansible-playbook -i inventory.ini install-vagrant.yaml -kK -vvv
- hosts: vm-host
  remote_user: devops
  become: yes

  vars:
    host_dir: sub-hosts/"{{ ansible_ssh_host }}"
    # deploy_app: mysql-cluster
    deploy_app: gluster-fs

  # roles: 
  # - robertdebock.virtualbox
  # - darkwizard242.vagrant

  tasks:
  # - name: Show host's ip
  #   debug:
  #     msg: "{{ ansible_ssh_host }}"

  # - name: Remove haproxy stable repository from PPA and install its signing key on Ubuntu target
  #   ansible.builtin.apt_repository:
  #     repo: ppa:vbernat/haproxy-2.4
  #     state: absent

  # - name: Add haproxy stable repository from PPA and install its signing key on Ubuntu target
  #   ansible.builtin.apt_repository:
  #     repo: ppa:vbernat/haproxy-2.6
  #     state: present

  # - name: Update apt-get repo and cache
  #   apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

  # - name: Upgrade all apt packages
  #   apt: upgrade=dist force_apt_get=yes

  # INSTALL AND CONFIGURE HAPROXY
  # - name: Install nginx
  #   ansible.builtin.apt:
  #     name: nginx
  #     state: present

  # - name: Enable nginx
  #   ansible.builtin.systemd:
  #     name: nginx
  #     state: started
  #     enabled: yes

  # # INSTALL AND CONFIGURE HAPROXY
  # - name: Install haproxy
  #   ansible.builtin.apt:
  #     name: haproxy
  #     state: present

  # - name: Enable haproxy
  #   ansible.builtin.systemd:
  #     name: haproxy
  #     state: started
  #     enabled: yes
  
  # - name: Remove haproxy.cfg file
  #   file:
  #     path: /etc/haproxy/haproxy.cfg
  #     state: absent

  # - name: configure haproxy.cfg file
  #   copy:
  #     src: sub-hosts/{{ ansible_ssh_host }}/{{ deploy_app }}/haproxy.cfg
  #     dest: /etc/haproxy/haproxy.cfg

  # - name: " haproxy service start"
  #   service:
  #     name: haproxy
  #     state: restarted

  # - name: Install vagrant
  #   ansible.builtin.apt:
  #     name: vagrant
  #     state: absent

  - name: Install virtualbox
    ansible.builtin.apt:
      name: virtualbox
      state: present

  - name: Install vagrant
    ansible.builtin.apt:
      name: vagrant
      state: present

  - name: Creates directory vagrant-deploy
    file:
      path: /home/devops/vagrant-deploy/{{ deploy_app }}
      owner: devops
      mode: '0755'
      state: directory

  # - name: Remove ansible.cfg file
  #   ansible.builtin.file:
  #     path: /home/devops/vagrant-deploy/{{ deploy_app }}/ansible.cfg
  #     state: absent

  # - name: Remove hosts.ini file
  #   ansible.builtin.file:
  #     path: /home/devops/vagrant-deploy/{{ deploy_app }}/hosts.ini
  #     state: absent

  # - name: Remove setup_initial_user.yaml file
  #   ansible.builtin.file:
  #     path: /home/devops/vagrant-deploy/{{ deploy_app }}/setup_initial_user.yaml
  #     state: absent

  # - name: place setup_initial_user.yaml file
  #   copy:
  #     src: sub-hosts/{{ ansible_ssh_host }}/{{ deploy_app }}/setup_initial_user.yaml
  #     dest: /home/devops/vagrant-deploy/{{ deploy_app }}/setup_initial_user.yaml
  #     owner: devops
  #     group: devops
  #     mode: '0755'

  # - name: Remove vagrant file
  #   file:
  #     path: /home/devops/vagrant-deploy/{{ deploy_app }}/Vagrantfile
  #     state: absent

  # - name: deploy vagrant config
  #   copy:
  #     src: sub-hosts/{{ ansible_ssh_host }}/{{ deploy_app }}/Vagrantfile
  #     dest: /home/devops/vagrant-deploy/{{ deploy_app }}/Vagrantfile
  #     owner: devops
  #     group: devops
  #     mode: '0755'

  # - name: upload setup files
  #   copy: src={{ item.src }} dest={{ item.dest }}
  #   with_items:
  #     - { src: '/Users/goremo/ansible-testbed/initial-user/ansible.cfg', dest: '/home/devops/vagrant-deploy/{{ deploy_app }}/ansible.cfg', owner: devops, mode: '0755' }
  #     - { src: '/Users/goremo/ansible-testbed/initial-user/hosts.ini', dest: '/home/devops/vagrant-deploy/{{ deploy_app }}/hosts.ini', owner: devops, mode: '0755' }
  
  # - name: upload setup_initial_user.yaml
  #   copy:
  #     src: sub-hosts/{{ ansible_ssh_host }}/{{ deploy_app }}/setup_initial_user.yaml
  #     dest: /home/devops/vagrant-deploy/{{ deploy_app }}/setup_initial_user.yaml
  #     owner: devops
  #     mode: '0755'

  - name: upload Vagrantfile
    copy:
      src: sub-hosts/{{ ansible_ssh_host }}/Vagrantfile
      dest: /home/devops/vagrant-deploy/Vagrantfile
      force: yes
      owner: devops
      mode: '0755'
  
  - name: place initial user script
    copy:
      src: remove_devops.sh
      dest: /home/devops/vagrant-deploy/remove_devops.sh
      force: yes
      owner: devops
      group: devops
      mode: '0755'

  - name: place initial user script
    copy:
      src: setup_initial_user.sh
      dest: /home/devops/vagrant-deploy/reset_environment.sh
      force: yes
      owner: devops
      group: devops
      mode: '0755'

  - name: place initial user script
    copy:
      src: setup_initial_user.sh
      dest: /home/devops/vagrant-deploy/setup_initial_user.sh
      force: yes
      owner: devops
      group: devops
      mode: '0755'
  
  # ISSUE: The IP address configured for the host-only network is not within the allowed range
  # SOLUTION: https://superuser.com/questions/1691783/cannot-create-a-private-network-from-vagrant-in-virtualbox-after-updating-it
  # - name: Remove vagrant file
  #   file:
  #     path: sub-hosts/networks.conf
  #     state: absent

  # - name: Ensures /etc/vbox/ dir exists
  #   file: path=/etc/vbox/ state=directory

  # - name: configure vagrant networks to comply with 192.168.1.0
  #   copy:
  #     src: sub-hosts/networks.conf
  #     dest: /etc/vbox/networks.conf
  #     owner: root
  #     group: root
  #     mode: '0644'
      # ----------------------------
  
  # - name: install prerequisites
  #   apt:
  #     name: libfuse2
  #     state: present

  # - name: remove previous .vagrant
  #   ansible.builtin.file:
  #     path: /home/devops/vagrant-deploy/{{ deploy_app }}/.vagrant
  #     state: absent

  # - name: move to vagrant-deploy and initilize vagrant
  #   shell:
  #     cmd: vagrant init
  #     chdir: /home/devops/vagrant-deploy/{{ deploy_app }}/

  - name: Restart network manager for virtualbox 
    shell:
      cmd: modprobe vboxnetadp
    become: yes

  - name: move to vagrant-deploy and stop vms for this host
    shell:
      cmd: vagrant destroy -f
      chdir: /home/devops/vagrant-deploy/
    become_user: devops
    ignore_errors: true
  
  - name: Recursively remove .vagrant dir
    ansible.builtin.file:
      path: /home/devops/vagrant-deploy/.vagrant
      state: absent

  - name: Restart network manager for virtualbox 
    shell:
      cmd: modprobe vboxnetadp
    become: yes

  - name: Vagrant hard halt 
    shell:
      cmd: pkill -9 VBoxHeadless
    become: yes
    ignore_errors: yes

  # - name: kill host fowarding port
  #   shell:
  #     cmd: kill -9 $(lsof -t -i:9001)
  # ------------------------------------

  - name: Get running processes
    # shell: "ps -ef | grep -v grep | grep -w {{ PROCESS }} | awk '{print $2}'"
    shell: lsof -t -i:7122-7622
    register: running_processes
    become: yes
    ignore_errors: yes

  - name: Kill running processes
    shell: "kill {{ item }}"
    with_items: "{{ running_processes.stdout_lines }}"

  - wait_for:
      path: "/proc/{{ item }}/status"
      state: absent
    with_items: "{{ running_processes.stdout_lines }}"
    ignore_errors: yes
    register: killed_processes

  - name: Force kill stuck processes
    shell: "kill -9 {{ item }}"
    with_items: "{{ killed_processes.results | select('failed') | map(attribute='item') | list }}"
    # -----------------------------------

  # - name: download vagrant box from local repository
  #   shell:
  #     cmd: wget http://192.168.1.107/os/ubuntu-22.04.box -O ubuntu-22.04.box
  #     chdir: /home/devops/vagrant-deploy/{{ deploy_app }}/
  #   become_user: devops

  - name: download vagrant box from local repository
    get_url: 
      url: http://192.168.1.107/os/ubuntu-22.04.box 
      dest: /home/devops/vagrant-deploy/{{ deploy_app }}/ubuntu-22.04.box
      force: yes

  - name: remove the vagrant box
    shell:
      cmd: vagrant box remove -f bento/ubuntu-22.04 --box-version 0
      chdir: /home/devops/vagrant-deploy/{{ deploy_app }}/
    become_user: devops
    ignore_errors: yes

  - name: add the vagrant box
    shell:
      cmd: vagrant box add --name bento/ubuntu-22.04 ubuntu-22.04.box
      chdir: /home/devops/vagrant-deploy/{{ deploy_app }}/
    become_user: devops
    ignore_errors: yes

  - name: replace existing, if any
    shell:
      cmd: cp -TRv ~/.vagrant.d/boxes/bento-VAGRANTSLASH-ubuntu-22.04/0 ~/.vagrant.d/boxes/bento-VAGRANTSLASH-ubuntu-22.04/202206.13.0
    become_user: devops
    ignore_errors: yes

  - name: set metadata_url
    shell:
      cmd: echo -n "https://vagrantcloud.com/bento/ubuntu-22.04" > ~/.vagrant.d/boxes/bento-VAGRANTSLASH-ubuntu-22.04/metadata_url
    become_user: devops
    ignore_errors: yes

  # - name: launch vms for this host
  #   shell:
  #     cmd: vagrant up --provision
  #     chdir: /home/devops/vagrant-deploy/{{ deploy_app }}/
  #   become_user: devops

  # replace existing
  # mv -f source target

  # - name: move to vagrant-deploy and launch vms for this host
  #   shell:
  #     cmd: sh /home/devops/vagrant-deploy/{{ deploy_app }}/start_vagrant.sh
  #     become_user: devops

  # - import_tasks: ../haproxy/install_haproxy.yaml
  # - import_tasks: ../nginx/install_nginx.yaml

  # - name: Change the working directory to somedir/ before executing the command
  #   ansible.builtin.shell: somescript.sh
  #   args:
  #     chdir: /home/devops/vagrant-deploy/{{ deploy_app }}/

