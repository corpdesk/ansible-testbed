- https://devops4solutions.medium.com/setup-ssh-key-and-initial-user-using-ansible-playbook-61eabbb0dba4
- https://stackoverflow.com/questions/19292899/creating-a-new-user-and-password-with-ansible
- https://medium.com/@ranmalsl/ansible-create-initial-user-on-managed-hosts-using-a-playbook-e7406a99e98b
- https://github.com/lyenliang/AnsibleLinuxAccountCreator/blob/master/createUsers.yml
CHANGE PASSWORD:
- https://jianjye.medium.com/how-to-update-user-password-with-ansible-f971f41a3b3e

Process:
- ansible controller created by: 
    - multipass launch -c 2 -d 10G -m 4G --network en0 --network name=bridge0,mode=manual
    - multipass name: uptown-urchin
        - sudo useradd -m -s /bin/bash devops
		- mkpasswd -m sha-512 "yU0B14NC1PdE"
		- make sure to replace each $ with \$
		- or create in out.txt with already replaced
		- or mkpasswd -m sha-512 "yU0B14NC1PdE" | sed 's/\$/\\$/g' > out.txt 
		- then:
		- useradd -m -s /bin/bash -p 
		- sudo useradd -m -p \$6\$QGFip3kXOicYeuKf\$pq3AMKWm9G6/iWtu10G6ciExPjRNcGZRL5Gni6zEHg46juPx4ZSSPkBMZLAF/WBfclfDbuSi4KXGW7b4hg1pH/ -s /bin/bash devops
		- login devops

/////////////////////////////////////////////////

1. SETUP ANSIBLE SERVER
    OPTION 1 (multipass):
        - launch multipass instance (ansible server host)
            - multipass launch --name=ansible-server -c 2 -d 5G -m 4G --network en0 --network name=bridge0,mode=manual
            - multipass launch --name=mysql-01 -c 2 -d 5G -m 4G --network en0 --network name=bridge0,mode=manual
        SSH into instance
            - multipass shell uptown-urchin
    OPTION 2 (vagrant):
        - launch vagrant instance (ansible server host)
            - vagrant up 
        SSH into instance
            - vagrant ssh vagrant@192.168.60.3
    OPTION 3 (docker):
        - launch docker instance
            - docker run goremo/ansible-server
        SSH into instance
            - docker exec -it <container name> /bin/bash

    

    INSTALL ANSIBLE SERVER REQUIREMENTS
    # https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-22-04
    # https://www.digitalocean.com/community/questions/ssh-copy-id-not-working-permission-denied-publickey
    # https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-20-04
    - sudo apt upgrade
    - sudo apt install net-tools git tree nfs-kernel-server ansible   -y
    - git clone https://github.com/georemo/ansible-testbed.git
    
    GENERATE SSH KEYS
    - ansible-generate-keys
    - yes | cp ~/.ssh/id_rsa.pub ansible-testbed/initial-user/id_rsa.pub
    - git push

    SET INITIAL USER
    - cd ansible-testbed/initial-user
    - ansible-playbook playbook03.yml
    EXIT



2. SET PUBLIC KEYS TO INVENTORY:
    - vagrant up
    - vagrant ssh vagrant@<inventory-ip>
    - 
    - git clone https://github.com/georemo/ansible-testbed.git
    - cd ansible-testbed/initial-user/
    - sudo sh setup_nfs_access.sh
    - sudo sh setup_pub_cert.sh
    EXIT

3. ANSIBLE SERVER -> SETUP HOST MACHINES:
    - ssh into host machines 
    - ansible -> setup host machines
        - install multipass/vagrant
        - create multipass/vagrant instances as per inventory

4. ANSIBLE SERVER -> DEPLOY SYSTEMS:
    - multipass shell uptown-urchin 
    - cd ansible-testbed/mysql-cluster
        - ansible-playbook -i hosts.ini playbook.yml
    - cd ansible-testbed/mysql-data
        - ansible-playbook -i hosts.ini playbook.yml
    - cd ansible-testbed/nodejs cluster
        - ansible-playbook -i hosts.ini playbook.yml
    - cd ansible-testbed/angular module federation cluster
        - ansible-playbook -i hosts.ini playbook.yml

//////////////////
SHARE SSH KEYS VIA NFS:
https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-22-04

///////////////
KEY SHARING:
# Ref: https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-22-04
- nb: Disable Password Authentication before applying ssh-copy-id  
# The #? is an extended regular expression that matches the line whether it's commented or not. 
# The -E switch enables extended regexp support for sed.
- sudo sed -i -E 's/#?PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
- use ssh-copy-id username@remote_host
sudo ssh-copy-id -i /home/ubuntu/.ssh/id_rsa.pub ubuntu@192.168.1.137
- automate password authentication: https://stackoverflow.com/questions/12202587/automatically-enter-ssh-password-with-script

sudo apt install sshpass -y
sshpass -p "yU0B14NC1PdE" ssh -o StrictHostKeyChecking=no ubuntu@192.168.1.137


ansible-playbook -i hosts.ini install-vagrant.yaml -kK -vvv







